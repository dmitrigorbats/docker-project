buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'nu.studer:gradle-jooq-plugin:4.1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

apply plugin: nu.studer.gradle.jooq.JooqPlugin

group = 'gorbats'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'javax.inject:javax.inject:1'
    implementation 'org.projectlombok:lombok:1.18.16'
    implementation 'org.flywaydb:flyway-core:6.5.7'
    implementation 'org.postgresql:postgresql'
    implementation 'org.jooq:jooq:3.14.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    jooqRuntime "org.postgresql:postgresql"
}

test {
    useJUnitPlatform()
}

jooq {
    version = '3.14.4'
    db(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = "jdbc:postgresql://localhost:5432/mydb"
            user = "postgres"
            password = "password"
        }
        generator {
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                excludes = "FLYWAY_SCHEMA_HISTORY"
                includes = '.*'
            }
            generate {
                fluentSetters = true
                javaTimeTypes = true
                pojosEqualsAndHashCode = true
                daos = true
            }
            target {
                packageName = "gorbats.dockerproject"
                directory = "src/jooq/java"
            }
        }
    }
}